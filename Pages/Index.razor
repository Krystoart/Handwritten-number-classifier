@page "/"
@inject IJSRuntime jsRuntime
@using Microsoft.AspNetCore.Components.Web;

<h1>WRITTEN NUMBER CLASSIFIER</h1>
<div class="content">
    <div class="canvas">
        <svg id="mainSvg" class="svg" width="@CanvasWidth" height="@CanvasHeight"
            @onmousedown="@OnMouseDown" @onmousemove="@Mouse_Move" @onmouseup="@OnMouseUp">
            <polyline class="poly" points="@PointString" />
        </svg>
        <div style="display:flex;flex-direction:row;margin:1em">
            <button @onclick="@ClearDrawing" class="button">
                Clear
            </button>
            <button class="button">
                Erasor
            </button>
            <button class="button">
                Guess
            </button>
        </div>
    </div>
</div>

@code {
    public string PointString;
    public double CanvasWidth;
    public double CanvasHeight;
    private bool pressed;
    private string Y;
    private string X;

    protected string prevCoordinates { get; set; }
    protected string Coordinates { get; set; }

    protected override void OnInitialized()
    {
        PointString = "";
        CanvasWidth = 500;
        CanvasHeight = 500;
        pressed = false;
    }
    protected async void OnMouseDown(MouseEventArgs e)
    {
        await SetCoordinates(e);

        if(String.IsNullOrEmpty(PointString)){
            PointString = X;
        }
        @* PointString = PointString + Coordinates; *@
        pressed = true;
    }
    protected void OnMouseUp(MouseEventArgs e)
    {
        pressed = false;
    }
    protected void Mouse_Move(MouseEventArgs e)
    {
        if(!pressed)return;
        SetCoordinates(e);
        PointString = PointString + "," + Y + " " + X;
    }

    protected async Task SetCoordinates(MouseEventArgs e)
    {
        Coordinates = await jsRuntime.InvokeAsync<string>("accessDOMElement", e);
        X = Coordinates.Split(" ")[0];
        Y = Coordinates.Split(" ")[1];
    }

    protected void ClearDrawing(MouseEventArgs e)
    {
        PointString = "";
    }
}
